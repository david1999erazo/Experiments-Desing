using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DiseñoDeExperimentos
{
    public class Program
    {
        static void Main(string[] args)
        {
            int[] ordenadoNoD1 = { 644, 1399, 1987, 2740, 2957, 3488, 4232, 4684, 5210, 5965 };
            Random ale = new Random();
            //int empezar = ale.Next(1, 100000);
            //for (int i = 0; i < Math.Pow(10, 3); i++)
            //{
            //    Console.Write(ale.Next(1, 100000) + ",");
            //}
            int[] ordenadoNoD2 = { 485, 958, 1481, 2234, 2485, 2553, 3278, 3763, 4105, 4215, 4738, 5188, 5345, 5755, 6618, 6900, 7421, 8189, 8869, 9492, 9848, 10337, 10739, 11536, 11807, 12151, 12401, 13039, 13770, 14121, 14948, 15622, 16536, 16994, 17352, 18189, 18824, 19642, 19816, 20461, 20484, 21220, 21841, 22390, 22503, 22637, 23371, 23862, 24378, 24838, 25312, 25761, 26661, 27473, 28420, 29415, 29487, 30213, 30696, 31602, 32420, 32508, 33261, 34251, 34534, 35383, 35919, 36617, 36670, 36696, 37343, 38045, 38640, 38676, 39277, 39897, 40765, 41617, 42301, 42439, 43049, 43807, 43929, 44201, 45078, 45457, 46230, 46332, 46843, 47205, 47971, 48880, 49216, 49484, 50310, 51245, 52227, 52858, 53125, 53388 };
            int[] ordenadoNoD3 = { 223, 290, 302, 787, 1484, 1799, 1853, 2132, 2620, 3220, 4119, 4400, 4938, 4954, 5303, 6163, 6327, 6799, 7230, 8180, 8245, 8758, 8902, 9181, 9386, 9438, 9876, 10274, 10473, 10790, 10948, 11735, 12011, 12414, 13003, 13886, 14564, 15541, 16540, 16790, 16896, 17025, 17605, 18199, 18269, 18940, 19337, 19836, 20359, 20714, 20841, 21785, 22687, 23385, 24367, 25076, 25999, 26732, 27013, 27658, 28535, 29191, 29271, 29442, 29885, 29997, 30003, 30139, 30565, 31031, 31213, 31399, 31871, 32052, 32897, 33833, 34766, 35315, 35524, 36057, 36711, 37650, 38525, 39368, 39558, 39771, 40656, 41233, 41653, 42533, 43492, 44436, 45133, 45487, 45860, 46310, 46359, 46768, 46919, 47877, 48543, 48805, 48878, 48936, 49109, 50050, 50523, 51244, 52096, 52143, 52918, 53292, 53817, 54564, 55555, 56493, 57273, 57509, 58490, 58721, 58948, 59376, 60091, 60636, 61142, 61380, 61869, 61987, 62795, 63191, 64078, 64602, 65000, 65251, 66117, 66510, 67376, 68194, 68865, 69114, 69854, 70018, 70743, 71117, 71223, 71808, 72228, 73177, 73540, 73974, 74643, 75455, 75883, 76803, 77534, 77773, 78319, 78847, 79398, 80333, 80785, 81141, 82054, 82511, 82670, 82922, 83898, 84173, 85054, 85652, 85725, 86687, 87252, 87984, 88474, 88538, 89241, 89582, 90022, 90942, 91759, 92299, 93053, 93427, 94153, 94229, 94325, 94803, 95322, 95950, 96796, 97134, 97401, 98136, 98933, 99318, 99568, 99836, 100052, 100905, 101514, 101660, 101729, 102494, 102856, 103563, 103811, 104506, 104936, 105604, 106140, 106346, 106434, 107065, 107184, 108096, 108697, 109237, 109967, 110051, 110207, 110706, 111461, 111714, 112465, 113199, 113894, 114723, 115658, 115764, 116577, 117012, 117137, 117723, 118035, 118706, 119178, 120167, 120179, 120199, 121026, 121427, 121475, 122325, 122418, 123059, 123310, 123946, 124563, 125447, 126230, 126940, 127478, 127611, 128309, 128420, 128810, 129625, 129639, 130267, 130279, 130697, 131457, 131781, 132636, 132737, 132818, 133319, 133638, 134085, 134526, 135138, 135666, 136376, 136632, 137387, 137838, 138743, 138904, 139015, 139499, 139559, 139771, 139822, 140145, 140248, 141145, 142137, 143025, 143226, 143508, 144164, 145140, 145524, 145533, 145943, 146583, 147306, 148301, 149292, 149853, 150602, 150919, 151090, 151534, 151705, 151888, 152715, 153592, 154535, 155194, 155679, 156334, 157237, 157381, 158332, 158538, 159247, 159249, 160001, 160205, 160293, 160906, 161025, 161191, 161975, 162611, 162755, 163457, 164302, 164417, 165145, 166054, 166223, 166772, 167507, 168250, 168292, 168899, 169051, 169971, 170042, 170158, 171103, 171644, 172440, 172442, 172515, 172755, 172812, 173017, 173948, 174669, 174912, 175699, 176173, 176309, 176508, 176514, 177174, 177709, 177748, 177873, 177905, 178733, 179664, 180239, 180725, 181079, 181488, 181697, 181861, 181964, 182813, 183645, 183779, 184751, 185419, 185996, 186365, 187147, 187710, 188614, 189259, 189900, 190083, 190090, 190757, 191138, 191214, 191813, 192357, 192394, 193340, 193956, 194838, 195783, 195868, 195985, 196595, 196817, 197333, 198051, 198881, 199729, 199770, 200599, 201471, 201882, 202536, 203037, 203505, 204126, 204762, 205639, 206611, 206745, 207225, 207615, 208260, 209184, 210092, 210197, 210476, 211285, 211949, 212077, 212233, 212466, 213415, 213603, 214491, 215042, 216008, 216156, 216423, 217267, 217341, 218138, 218739, 219093, 219228, 219484, 220211, 220785, 220917, 221839, 222239, 222308, 222952, 223700, 224166, 224860, 225331, 226016, 226329, 226740, 227180, 227201, 227385, 228297, 228970, 229609, 230070, 230536, 231149, 232065, 232719, 233208, 233819, 233947, 234007, 234689, 235478, 235770, 236560, 237213, 237591, 238295, 238973, 239714, 240441, 240529, 241118, 241320, 242042, 242236, 242316, 242598, 243432, 244287, 244691, 244745, 245358, 246046, 246727, 247223, 248017, 248278, 249238, 249453, 249722, 250633, 251091, 251608, 252296, 253079, 253984, 254164, 255058, 255718, 255752, 256487, 256830, 257272, 257457, 258043, 258094, 258354, 259098, 259518, 260355, 260728, 261382, 262137, 262860, 262867, 262937, 263038, 263649, 263944, 264803, 264921, 265664, 266128, 266601, 267417, 268047, 268119, 268632, 269570, 269859, 270759, 271146, 271321, 272143, 272811, 273522, 273694, 274197, 274292, 274737, 275271, 275787, 276328, 276706, 277601, 277859, 278561, 279354, 280035, 280749, 281554, 282123, 282723, 283524, 284439, 285431, 286309, 287277, 287646, 288602, 289580, 290326, 291132, 291263, 292199, 293185, 293664, 294596, 294651, 294947, 295844, 296441, 296957, 297806, 298131, 298732, 298934, 299020, 299598, 300156, 301083, 301362, 302193, 302417, 302901, 303232, 304019, 304393, 305300, 305976, 306808, 307011, 307145, 307284, 307751, 308538, 309248, 309659, 310100, 311009, 311787, 312556, 313294, 313680, 314496, 314704, 314758, 315508, 315984, 316298, 317088, 317880, 318271, 319082, 319111, 319810, 320725, 321307, 321954, 322559, 322758, 322864, 322890, 323268, 323732, 324427, 324890, 325267, 325649, 326186, 327077, 327868, 328513, 329182, 329961, 330120, 330660, 331106, 331514, 331790, 332068, 332105, 333002, 333595, 334481, 334521, 335333, 335656, 335767, 336535, 337407, 337536, 338299, 339134, 339844, 340517, 341260, 341620, 342541, 342663, 343408, 344084, 344452, 345391, 345814, 346812, 346960, 347682, 347714, 348583, 348743, 349212, 349386, 349758, 350086, 350249, 350457, 350890, 351382, 351807, 352689, 352829, 353095, 353709, 354373, 355135, 355164, 355973, 356931, 357038, 357453, 357633, 358157, 358443, 358973, 359574, 360242, 361200, 361370, 362258, 363149, 363240, 363532, 363773, 364381, 364785, 365739, 366130, 366638, 367186, 367651, 367961, 368829, 369326, 369566, 370171, 370582, 371335, 371610, 372270, 373239, 373577, 374340, 375265, 375720, 376699, 377643, 378531, 379373, 380099, 380593, 380843, 381106, 381710, 382243, 383034, 383882, 383908, 383914, 384175, 384983, 385620, 385922, 386333, 386974, 387079, 387391, 387419, 387466, 388390, 388581, 389496, 390179, 390689, 391607, 392161, 392488, 392854, 393640, 394269, 394728, 394794, 395343, 396125, 396179, 396395, 396443, 396708, 397671, 398119, 398876, 399262, 400009, 400023, 400875, 401207, 401244, 401597, 401881, 402231, 402898, 403815, 404657, 405574, 406109, 406688, 407254, 408007, 408692, 409671, 410136, 410618, 410857, 411234, 412036, 412778, 412866, 413386, 413743, 414168, 414226, 414274, 414338, 414936, 415104, 415909, 416077, 416747, 417405, 417991, 418508, 419482, 419564, 420001, 420962, 421503, 421727, 422359, 422606, 423081, 423731, 424025, 424604, 425588, 426571, 426846, 426993, 427364, 427576, 427686, 427931, 428448, 429443, 430302, 430594, 431214, 432068, 432312, 433062, 433792, 434204, 435100, 435196, 435295, 435757, 436247, 436648, 437450, 437865, 438127, 438646, 439102, 439375, 440257, 441032, 441796, 442264, 442343, 442958, 443851, 444509, 445305, 445764, 446312, 446654, 446655, 447633, 447856, 448001, 448343, 449029, 450008, 450890, 451406, 451469, 452222, 452420, 452900, 453422, 453915, 454789, 455134, 456090, 457039, 457630, 458418, 458662, 458776, 458860, 459387, 459540, 460315, 460944, 461801, 461874, 462490, 462928, 463476, 464233, 464694, 465205, 465383, 466040, 466113, 466688, 467227, 467801, 468557, 469376, 469398, 469965, 470952, 471508, 471630, 471649, 471963, 472802, 473311, 474268, 474821, 475578, 476443, 476582, 477199, 477389, 478300, 478651, 478677, 479121, 479568, 479884, 480534, 481257, 481319, 482301, 482997, 483684, 484567, 484942, 484994, 485209, 485696, 485990, 486052, 487012, 487177, 487396, 487904, 488742, 489500, 490276, 491204, 491794, 491998, 492702, 493347, 493386, 493426, 494309, 494973, 495162, 495711, 496023, 496396, 497101, 498017, 498282, 498777, 498916, 499239, 499865, 500820, 500955, 501860, 502199, 502469, 503040, 503118, 503774, 503799, 504491, 505333, 505521, 506206, 506876, 507264, 507324, 507843 };

            int[] ordenadoNoA1 = ordenadoNoD1.Reverse().ToArray();
            int[] ordenadoNoA2 = ordenadoNoD2.Reverse().ToArray(); ;
            int[] ordenadoNoA3 = ordenadoNoD3.Reverse().ToArray(); ;

            int[] aleatorio1 = { 33142, 86097, 69335, 42044, 36563, 44079, 12301, 20264, 26839, 67083 };
            int[] aleatorio2 = { 20445, 52707, 35466, 25566, 58721, 737, 66297, 34294, 61606, 8959, 74330, 63736, 16759, 24787, 21092, 92677, 95899, 43306, 28056, 77041, 42413, 75548, 3776, 47960, 28962, 711, 84688, 84506, 61577, 38576, 63686, 36045, 19580, 85049, 89100, 34333, 27337, 73560, 18381, 71356, 90367, 26162, 39825, 52331, 17289, 23399, 13922, 34576, 63834, 38357, 54665, 68480, 79979, 89208, 49401, 44896, 48932, 87505, 96603, 58011, 16049, 81791, 72716, 23031, 45272, 38285, 44157, 31710, 35687, 86758, 65340, 22340, 24925, 56700, 86673, 16251, 35724, 51444, 30672, 5563, 86789, 50112, 20673, 23220, 83911, 95206, 56066, 30371, 35648, 44204, 85401, 39831, 76956, 60370, 55308, 8577, 53445, 16794, 7059, 79003 };


        }


        public static void QuickSort(int[] A, int p, int r)
        {
           
            if (p < r)
            {
                int q = Partition(A, p, r);
                QuickSort(A, p, q - 1);
                QuickSort(A, q + 1, r);
            }


        }

        private static int Partition(int[] A, int p, int r)
        {
            int x = A[r];
            int temp;

            int i = p;
            for (int j = p; j < r; j++)
            {
                if (A[j] <= x)
                {
                    temp = A[j];
                    A[j] = A[i];
                    A[i] = temp;
                    i++;
                }
            }

            A[r] = A[i];
            A[i] = x;
            return i;
        }
        public static void RandomizeQS(int[] A, int p, int r)
        {
            if (p < r)
            {
                int q = RandParti(A, p, r);
                RandomizeQS(A, p, q - 1);
                RandomizeQS(A, q+1, r);
            }

        }

        public static int RandParti(int[] A, int p, int r)
        {
            Random n = new Random();
            int i = n.Next(p,r);
            int aux = A[r];
            A[r] = A[i];
            A[i] = aux;
            return Partition(A, p, r);
        }

        public static void imprimirArreglo(int[] A)
        {
            String mensaje = "";
            for (int i = 0; i < A.Length; i++)
            {
                mensaje += A[i] + " ";
            }
            Console.WriteLine(mensaje);

        }

    }
}
